package prestamo;

import javax.swing.*;
import java.awt.event.*;
import java.sql.*;
import CONEXION.CONEXION;

public class CREAR_SALAS extends javax.swing.JFrame {

    // Constructor de la clase
    public CREAR_SALAS() {
        initComponents();
        cargarEdificios(); // Llamada al método para cargar edificios en el combobox
        setLocationRelativeTo(null); // Centrar la ventana en la pantalla
    }

    // Método para cargar los edificios en el JComboBox
    private void cargarEdificios() {
        try (Connection conn = CONEXION.conectar();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT DISTINCT NOMBRE FROM EDIFICIO ORDER BY NOMBRE")) {
            
            // Limpiar el combobox antes de agregar los datos
            edificio.removeAllItems();
            
            // Agregar "SELECCIONE" como primer ítem en el combobox
            edificio.addItem("SELECCIONE");
            
            // Agregar los nombres al combobox
            while (rs.next()) {
                edificio.addItem(rs.getString("NOMBRE"));
            }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar edificios: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Método para manejar la creación de la nueva sala
    private void crearSala() {
    // Obtener los datos del formulario
    String nombreSala = nombre.getText().trim();
    String capacidadSala = capacidad.getText().trim();
    String descripcionSala = descripcion.getText().trim();
    String nombreEdificio = (String) edificio.getSelectedItem();

    // Validar que todos los campos estén llenos
    if (nombreSala.isEmpty() || capacidadSala.isEmpty() || descripcionSala.isEmpty() || nombreEdificio == null || nombreEdificio.equals("SELECCIONE")) {
        JOptionPane.showMessageDialog(this, "Por favor, completa todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        int capacidadInt = Integer.parseInt(capacidadSala);

        // Conexión a la base de datos y preparación de la consulta para insertar la sala
        try (Connection conn = CONEXION.conectar();
             PreparedStatement pstmt = conn.prepareStatement(
                    "INSERT INTO INFO_SALAS (ID, NOMBRE, CAPACIDAD, DESCRIPCION, EDIFICIO) " +
                    "VALUES (SEQ_INFO_SALAS.NEXTVAL, ?, ?, ?, ?)")) {

            // Establecer los parámetros de la consulta
            pstmt.setString(1, nombreSala);
            pstmt.setInt(2, capacidadInt);
            pstmt.setString(3, descripcionSala);
            pstmt.setString(4, nombreEdificio);

            // Ejecutar la consulta
            pstmt.executeUpdate();

            // Mostrar mensaje de éxito
            JOptionPane.showMessageDialog(this, "Sala creada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

            // Limpiar los campos después de crear la sala
            nombre.setText("");
            capacidad.setText("");
            descripcion.setText("");
            edificio.setSelectedIndex(0);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al crear sala: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "La capacidad debe ser un número.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}


    // Método de limpieza de campos
    private void limpiarCampos() {
        nombre.setText("");
        capacidad.setText("");
        descripcion.setText("");
    }

    // El código generado por el diseñador (initComponents) debería estar aquí, que inicializa los componentes gráficos.
                           

    // El código generado por el diseñador (initComponents) debería estar aquí, que inicializa los componentes gráficos.
    





    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cancelar = new javax.swing.JButton();
        crear = new javax.swing.JButton();
        nombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        edificio = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        capacidad = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcion = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Creacion de Salas");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 340, 40));

        jLabel1.setBackground(new java.awt.Color(0, 0, 153));
        jLabel1.setToolTipText("");
        jLabel1.setOpaque(true);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 90));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel8.setText("Informacion de Recursos");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 370, 40));

        cancelar.setBackground(new java.awt.Color(0, 0, 0));
        cancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cancelar.setForeground(new java.awt.Color(255, 255, 255));
        cancelar.setText("CANCELAR");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        jPanel1.add(cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 650, 160, 50));

        crear.setBackground(new java.awt.Color(0, 0, 0));
        crear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        crear.setForeground(new java.awt.Color(255, 255, 255));
        crear.setText("CREAR");
        crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearActionPerformed(evt);
            }
        });
        jPanel1.add(crear, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 650, 160, 50));

        nombre.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreKeyTyped(evt);
            }
        });
        jPanel1.add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 210, 40));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Nombre de Sala:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, -1, -1));

        edificio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(edificio, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 200, 40));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Edificio:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 190, -1, -1));

        capacidad.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        capacidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capacidadActionPerformed(evt);
            }
        });
        capacidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                capacidadKeyTyped(evt);
            }
        });
        jPanel1.add(capacidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 210, 40));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel12.setText("Capacidad:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, -1, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Descripcion:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 410, -1, -1));

        descripcion.setColumns(20);
        descripcion.setRows(5);
        jScrollPane1.setViewportView(descripcion);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 490, 80));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
            dispose();


        // TODO add your handling code here:
    }//GEN-LAST:event_cancelarActionPerformed

    private void crearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearActionPerformed
            crearSala();
        
     // TODO add your handling code here:
    }//GEN-LAST:event_crearActionPerformed

    private void nombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreKeyTyped
        char c = evt.getKeyChar();
        // Aceptar solo letras mayúsculas y espacios
        if (nombre.getText().length ()>=30)
        evt.consume();        // TODO add your handling code here:
    }//GEN-LAST:event_nombreKeyTyped

    private void capacidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capacidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_capacidadActionPerformed

    private void capacidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_capacidadKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_capacidadKeyTyped
    

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField capacidad;
    private javax.swing.JButton crear;
    private javax.swing.JTextArea descripcion;
    private javax.swing.JComboBox<String> edificio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nombre;
    // End of variables declaration//GEN-END:variables
}
